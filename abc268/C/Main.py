#!/usr/bin/env python3
import sys
from typing import List


def solve(N: int, p: "List[int]"):
    if N == 3:
        print(len(p))
        return
    a = [0] * N
    for i, pi in enumerate(p):
        s1 = (pi - i - 1) % N
        s2 = (pi - i + 2) % N
        a[s1] += 1
        a[s2] -= 1
        if s1 > s2:
            a[0] += 1
    ans = 0
    s = 0
    for ai in a:
        s += ai
        ans = max(ans, s)

    print(ans)



# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    p = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, p)


if __name__ == '__main__':
    main()
