#!/usr/bin/env python3
import sys
from typing import List


def solve(N: int, P: "List[int]"):
    i = N - 1
    while P[i - 1] < P[i]:
        i -= 1

    # P[i - 1] > P[i]
    ns = sorted(P[i - 1:])
    j = ns.index(P[i - 1])
    # j > 0
    m = ns[j - 1]
    del ns[j - 1]
    print(*P[:i - 1], m, *reversed(ns))


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    P = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, P)


if __name__ == '__main__':
    main()
